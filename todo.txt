

Short Term:
  Improve code quality
    Improve performance (playing the music takes way too long)
    Provide a static method in 'Message' that produces a "quit" Message
      Change loader to match against this message to determine quitting
        Or I could just have the method return "quit" (or do both)
    Harden up dispatch for unexpected inputs
      Get "quit" to work in dispatch
    Improve the pathing for the configuration files
      Streamline the paths so they are always based on a common root
      Then add in adjustment code to transform the relative paths for the app
        In case the root path is not considered as such during app running
  Find a way to press ctrl-c in cli app and have it raise in parent app

Produce a short video of the project

Medium Term:
  Move file location to the server
    Convert music selection to using the server data
    Move out of hardcoding the music files

Long Term:
  Figure out how the device manager is supposed to act if I add in an AI node
    I suppose in the final system, the AI node gets setup first, so the server addr exists
    We can also use the udp broadcast system to handle this possibility
      Would need to modify the launcher script to wait until the manager has found the server
  Switch over networking to use udp broadcasting to determine where the servers are
    I'm hardcoding the locations for now as that is simpler for my initial development
// https://github.com/jholtmann/ip_discovery - can use this script during client startup
            // https://gist.github.com/rsolomo/8703190
