

Short Term:
  Create script to start up everything to baseline level
    Remove the need to hardcode the plugin directory
      Add a plugin-dir argument to the launcher
        Need to figure out how to layer the config parsers
          Want to be able to run the launcher specific stuff first, then the plugin stuff
            Could use positional arguments (ie. <launcher> --plugin-args <plugin>)
  Add in config support to the plugin apps
    Utilize python-clg to produce a command parser for the plugin loader (https://github.com/fmenabe/python-clg)
      Settle on the usage behavior (ie. how the user specifies the args the plugin supports)
        Currently, the syntax is given through an `cmd_args.yaml` file
        NOTE: The file has to exist in the same directory as the python code
      The loader will parse the arguments into a dictionary and provide it to the plugin
        This package enables the loader to not care about what it's parsing
  Improve logging support
    Convert rust output to use logging instead
    Split logging for plugins into separate files
      The 'loader' stuff should not log to the plugin files
    Log any received config options that are not used/recognized
  Improve code quality
    Improve performance (playing the music takes way too long)
    Fix various bugs and irregularities in the various plugins
    Harden up dispatch for unexpected inputs
    Improve the pathing for the configuration files
      Streamline the paths so they are always based on a common root
      Then add in adjustment code to transform the relative paths for the app
        In case the root path is not considered as such during app running
  Find a way to press ctrl-c in cli app and have it raise in parent app

Long Term:
  Figure out how the device manager is supposed to act if I add in an AI node
    I suppose in the final system, the AI node gets setup first, so the server addr exists
    We can also use the udp broadcast system to handle this possibility
      Would need to modify the launcher script to wait until the manager has found the server
  Switch over networking to use udp broadcasting to determine where the servers are
    I'm hardcoding the locations for now as that is simpler for my initial development
// https://github.com/jholtmann/ip_discovery - can use this script during client startup
            // https://gist.github.com/rsolomo/8703190
